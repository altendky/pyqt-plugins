diff --git a/designer/excepthook.c b/designer/excepthook.c
new file mode 100644
index 0000000..1ab60b1
--- /dev/null
+++ b/designer/excepthook.c
@@ -0,0 +1,483 @@
+const char * moduleName = "exceptiondialog";
+
+const char moduleCode[] = {
+    0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x66, 0x75, 0x6e,
+    0x63, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x0a, 0x69, 0x6d, 0x70,
+    0x6f, 0x72, 0x74, 0x20, 0x73, 0x79, 0x73, 0x0a, 0x69, 0x6d,
+    0x70, 0x6f, 0x72, 0x74, 0x20, 0x74, 0x72, 0x61, 0x63, 0x65,
+    0x62, 0x61, 0x63, 0x6b, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
+    0x20, 0x50, 0x79, 0x51, 0x74, 0x36, 0x20, 0x69, 0x6d, 0x70,
+    0x6f, 0x72, 0x74, 0x20, 0x51, 0x74, 0x43, 0x6f, 0x72, 0x65,
+    0x2c, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
+    0x73, 0x0a, 0x0a, 0x51, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x2e,
+    0x71, 0x44, 0x65, 0x62, 0x75, 0x67, 0x28, 0x27, 0x49, 0x6d,
+    0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x6d, 0x6f,
+    0x64, 0x75, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x65,
+    0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x64,
+    0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x27, 0x29, 0x0a, 0x0a,
+    0x64, 0x65, 0x66, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
+    0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
+    0x65, 0x5f, 0x62, 0x6f, 0x78, 0x28, 0x65, 0x78, 0x63, 0x54,
+    0x79, 0x70, 0x65, 0x3d, 0x4e, 0x6f, 0x6e, 0x65, 0x2c, 0x20,
+    0x65, 0x78, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3d, 0x4e,
+    0x6f, 0x6e, 0x65, 0x2c, 0x20, 0x74, 0x72, 0x61, 0x63, 0x65,
+    0x62, 0x61, 0x63, 0x6b, 0x6f, 0x62, 0x6a, 0x3d, 0x4e, 0x6f,
+    0x6e, 0x65, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6d,
+    0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x74,
+    0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x66,
+    0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x65,
+    0x70, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x65, 0x78, 0x63, 0x54,
+    0x79, 0x70, 0x65, 0x2c, 0x20, 0x65, 0x78, 0x63, 0x56, 0x61,
+    0x6c, 0x75, 0x65, 0x2c, 0x20, 0x74, 0x72, 0x61, 0x63, 0x65,
+    0x62, 0x61, 0x63, 0x6b, 0x6f, 0x62, 0x6a, 0x29, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
+    0x20, 0x3d, 0x20, 0x27, 0x27, 0x2e, 0x6a, 0x6f, 0x69, 0x6e,
+    0x28, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x29, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x69, 0x61, 0x6c, 0x6f,
+    0x67, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x3d, 0x4e, 0x6f,
+    0x6e, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3d, 0x27, 0x45,
+    0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x27, 0x2c,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6d,
+    0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3d, 0x6d, 0x65, 0x73,
+    0x73, 0x61, 0x67, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x3d, 0x51,
+    0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51,
+    0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78,
+    0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x2c,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x29, 0x0a, 0x0a, 0x63, 0x6c,
+    0x61, 0x73, 0x73, 0x20, 0x46, 0x69, 0x74, 0x74, 0x65, 0x64,
+    0x54, 0x65, 0x78, 0x74, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65,
+    0x72, 0x28, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
+    0x73, 0x2e, 0x51, 0x54, 0x65, 0x78, 0x74, 0x42, 0x72, 0x6f,
+    0x77, 0x73, 0x65, 0x72, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x64, 0x65, 0x66, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x48,
+    0x69, 0x6e, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x29, 0x3a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64,
+    0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x20, 0x3d, 0x20, 0x73,
+    0x75, 0x70, 0x65, 0x72, 0x28, 0x29, 0x2e, 0x73, 0x69, 0x7a,
+    0x65, 0x48, 0x69, 0x6e, 0x74, 0x28, 0x29, 0x0a, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20,
+    0x6e, 0x6f, 0x74, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
+    0x74, 0x2e, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x28,
+    0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72,
+    0x6e, 0x20, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64,
+    0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69,
+    0x7a, 0x65, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e,
+    0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x29,
+    0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x0a, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x73,
+    0x6b, 0x74, 0x6f, 0x70, 0x73, 0x20, 0x3d, 0x20, 0x51, 0x74,
+    0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x41,
+    0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
+    0x2e, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x28, 0x29,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
+    0x65, 0x72, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x73, 0x6b, 0x74,
+    0x6f, 0x70, 0x73, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
+    0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x28, 0x73, 0x65, 0x6c,
+    0x66, 0x2e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x28, 0x29,
+    0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x20, 0x3d,
+    0x20, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x73, 0x2e,
+    0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x47, 0x65, 0x6f, 0x6d,
+    0x65, 0x74, 0x72, 0x79, 0x28, 0x73, 0x63, 0x72, 0x65, 0x65,
+    0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x29, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69,
+    0x66, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
+    0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x77, 0x69, 0x64, 0x74,
+    0x68, 0x28, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x3a, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
+    0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x73, 0x65, 0x74, 0x57,
+    0x69, 0x64, 0x74, 0x68, 0x28, 0x67, 0x65, 0x6f, 0x6d, 0x65,
+    0x74, 0x72, 0x79, 0x2e, 0x77, 0x69, 0x64, 0x74, 0x68, 0x28,
+    0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x32, 0x35, 0x29, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66,
+    0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
+    0x73, 0x69, 0x7a, 0x65, 0x2e, 0x68, 0x65, 0x69, 0x67, 0x68,
+    0x74, 0x28, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x30, 0x3a, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
+    0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x73, 0x65, 0x74, 0x48,
+    0x65, 0x69, 0x67, 0x68, 0x74, 0x28, 0x67, 0x65, 0x6f, 0x6d,
+    0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x65, 0x69, 0x67, 0x68,
+    0x74, 0x28, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x34, 0x29,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x72, 0x5f,
+    0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x51, 0x74,
+    0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x41,
+    0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
+    0x2e, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x28, 0x29, 0x2e, 0x70,
+    0x69, 0x78, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
+    0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67,
+    0x65, 0x74, 0x73, 0x2e, 0x51, 0x53, 0x74, 0x79, 0x6c, 0x65,
+    0x2e, 0x50, 0x4d, 0x5f, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
+    0x42, 0x61, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x77,
+    0x69, 0x64, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x73, 0x75, 0x6d,
+    0x28, 0x28, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d,
+    0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x77,
+    0x69, 0x64, 0x74, 0x68, 0x28, 0x29, 0x2c, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
+    0x6e, 0x74, 0x73, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73,
+    0x28, 0x29, 0x2e, 0x6c, 0x65, 0x66, 0x74, 0x28, 0x29, 0x2c,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f,
+    0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x72, 0x67,
+    0x69, 0x6e, 0x73, 0x28, 0x29, 0x2e, 0x72, 0x69, 0x67, 0x68,
+    0x74, 0x28, 0x29, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x63, 0x72,
+    0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x72, 0x5f, 0x77, 0x69, 0x64,
+    0x74, 0x68, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x29, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
+    0x20, 0x3d, 0x20, 0x73, 0x75, 0x6d, 0x28, 0x28, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
+    0x73, 0x69, 0x7a, 0x65, 0x2e, 0x68, 0x65, 0x69, 0x67, 0x68,
+    0x74, 0x28, 0x29, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c,
+    0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
+    0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x28, 0x29, 0x2e,
+    0x74, 0x6f, 0x70, 0x28, 0x29, 0x2c, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
+    0x74, 0x73, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x73, 0x28,
+    0x29, 0x2e, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x28, 0x29,
+    0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
+    0x62, 0x61, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x2c,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29,
+    0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x51, 0x74,
+    0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x53, 0x69, 0x7a, 0x65,
+    0x28, 0x77, 0x69, 0x64, 0x74, 0x68, 0x2c, 0x20, 0x68, 0x65,
+    0x69, 0x67, 0x68, 0x74, 0x29, 0x0a, 0x0a, 0x0a, 0x63, 0x6c,
+    0x61, 0x73, 0x73, 0x20, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
+    0x55, 0x69, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65,
+    0x66, 0x20, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f,
+    0x28, 0x73, 0x65, 0x6c, 0x66, 0x2c, 0x20, 0x70, 0x61, 0x72,
+    0x65, 0x6e, 0x74, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6c,
+    0x61, 0x79, 0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x51, 0x74,
+    0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x47,
+    0x72, 0x69, 0x64, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28,
+    0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x29, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x69, 0x63, 0x6f, 0x6e, 0x20, 0x3d, 0x20, 0x51, 0x74,
+    0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x4c,
+    0x61, 0x62, 0x65, 0x6c, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e,
+    0x74, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6d, 0x65, 0x73, 0x73,
+    0x61, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x46, 0x69, 0x74, 0x74,
+    0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x42, 0x72, 0x6f, 0x77,
+    0x73, 0x65, 0x72, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
+    0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f, 0x70, 0x79, 0x20,
+    0x3d, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
+    0x73, 0x2e, 0x51, 0x50, 0x75, 0x73, 0x68, 0x42, 0x75, 0x74,
+    0x74, 0x6f, 0x6e, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
+    0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x62, 0x75, 0x74, 0x74, 0x6f,
+    0x6e, 0x73, 0x20, 0x3d, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64,
+    0x67, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x44, 0x69, 0x61, 0x6c,
+    0x6f, 0x67, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42, 0x6f,
+    0x78, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x29, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f, 0x70, 0x79, 0x2e, 0x73,
+    0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x28, 0x27, 0x43, 0x6f,
+    0x70, 0x79, 0x20, 0x54, 0x6f, 0x20, 0x43, 0x6c, 0x69, 0x70,
+    0x62, 0x6f, 0x61, 0x72, 0x64, 0x27, 0x29, 0x0a, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c,
+    0x66, 0x2e, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x61,
+    0x64, 0x64, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x28, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x69, 0x63, 0x6f, 0x6e, 0x2c, 0x20,
+    0x30, 0x2c, 0x20, 0x30, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6c,
+    0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x61, 0x64, 0x64, 0x57,
+    0x69, 0x64, 0x67, 0x65, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2c, 0x20,
+    0x30, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x32,
+    0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6c, 0x61, 0x79, 0x6f, 0x75,
+    0x74, 0x2e, 0x61, 0x64, 0x64, 0x57, 0x69, 0x64, 0x67, 0x65,
+    0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f, 0x70,
+    0x79, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x31, 0x29, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c,
+    0x66, 0x2e, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x61,
+    0x64, 0x64, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x28, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
+    0x73, 0x2c, 0x20, 0x31, 0x2c, 0x20, 0x32, 0x29, 0x0a, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65,
+    0x6c, 0x66, 0x2e, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
+    0x73, 0x65, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65,
+    0x6e, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x6f,
+    0x70, 0x79, 0x2c, 0x20, 0x51, 0x74, 0x43, 0x6f, 0x72, 0x65,
+    0x2e, 0x51, 0x74, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x4c,
+    0x65, 0x66, 0x74, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6c,
+    0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x73, 0x65, 0x74, 0x52,
+    0x6f, 0x77, 0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x28,
+    0x30, 0x2c, 0x20, 0x31, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6c,
+    0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x73, 0x65, 0x74, 0x43,
+    0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x74,
+    0x63, 0x68, 0x28, 0x31, 0x2c, 0x20, 0x31, 0x29, 0x0a, 0x0a,
+    0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x20, 0x44, 0x69, 0x61,
+    0x6c, 0x6f, 0x67, 0x28, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67,
+    0x65, 0x74, 0x73, 0x2e, 0x51, 0x44, 0x69, 0x61, 0x6c, 0x6f,
+    0x67, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65,
+    0x66, 0x20, 0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f,
+    0x28, 0x73, 0x65, 0x6c, 0x66, 0x2c, 0x20, 0x2a, 0x61, 0x72,
+    0x67, 0x73, 0x2c, 0x20, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
+    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x3d, 0x46, 0x61, 0x6c, 0x73,
+    0x65, 0x2c, 0x20, 0x2a, 0x2a, 0x6b, 0x77, 0x61, 0x72, 0x67,
+    0x73, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x73, 0x75, 0x70, 0x65, 0x72, 0x28, 0x29, 0x2e,
+    0x5f, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x5f, 0x28, 0x2a,
+    0x61, 0x72, 0x67, 0x73, 0x2c, 0x20, 0x2a, 0x2a, 0x6b, 0x77,
+    0x61, 0x72, 0x67, 0x73, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e,
+    0x75, 0x69, 0x20, 0x3d, 0x20, 0x44, 0x69, 0x61, 0x6c, 0x6f,
+    0x67, 0x55, 0x69, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
+    0x3d, 0x73, 0x65, 0x6c, 0x66, 0x29, 0x0a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x75, 0x69, 0x2e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
+    0x73, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
+    0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x28, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
+    0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x62, 0x75,
+    0x74, 0x74, 0x6f, 0x6e, 0x73, 0x2e, 0x72, 0x65, 0x6a, 0x65,
+    0x63, 0x74, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
+    0x63, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x72, 0x65,
+    0x6a, 0x65, 0x63, 0x74, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e,
+    0x75, 0x69, 0x2e, 0x63, 0x6f, 0x70, 0x79, 0x2e, 0x63, 0x6c,
+    0x69, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x6e,
+    0x65, 0x63, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63,
+    0x6f, 0x70, 0x79, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x73,
+    0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x28, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x6c, 0x61, 0x79,
+    0x6f, 0x75, 0x74, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73,
+    0x20, 0x3d, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65,
+    0x74, 0x73, 0x2e, 0x51, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
+    0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42, 0x6f, 0x78, 0x2e,
+    0x4f, 0x6b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x69, 0x66, 0x20, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
+    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62,
+    0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x20, 0x7c, 0x3d, 0x20,
+    0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e,
+    0x51, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x75, 0x74,
+    0x74, 0x6f, 0x6e, 0x42, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6e,
+    0x63, 0x65, 0x6c, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69,
+    0x2e, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x2e, 0x73,
+    0x65, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
+    0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x73, 0x28, 0x62, 0x75,
+    0x74, 0x74, 0x6f, 0x6e, 0x73, 0x29, 0x0a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x74, 0x65, 0x78, 0x74, 0x20, 0x3d, 0x20, 0x4e, 0x6f,
+    0x6e, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x68, 0x74, 0x6d, 0x6c,
+    0x20, 0x3d, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x0a, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c,
+    0x66, 0x2e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6d,
+    0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x73, 0x69, 0x7a,
+    0x65, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x6d,
+    0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65,
+    0x28, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x73,
+    0x20, 0x3d, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65,
+    0x74, 0x73, 0x2e, 0x51, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
+    0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x73, 0x6b,
+    0x74, 0x6f, 0x70, 0x28, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
+    0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x3d, 0x20,
+    0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x73, 0x2e, 0x73,
+    0x63, 0x72, 0x65, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
+    0x72, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x70, 0x61, 0x72,
+    0x65, 0x6e, 0x74, 0x28, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x67, 0x65, 0x6f, 0x6d, 0x65,
+    0x74, 0x72, 0x79, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x73, 0x6b,
+    0x74, 0x6f, 0x70, 0x73, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65,
+    0x6e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x28,
+    0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6e, 0x75, 0x6d,
+    0x62, 0x65, 0x72, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x73,
+    0x65, 0x74, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x48,
+    0x65, 0x69, 0x67, 0x68, 0x74, 0x28, 0x67, 0x65, 0x6f, 0x6d,
+    0x65, 0x74, 0x72, 0x79, 0x2e, 0x68, 0x65, 0x69, 0x67, 0x68,
+    0x74, 0x28, 0x29, 0x20, 0x2a, 0x20, 0x30, 0x2e, 0x37, 0x29,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x78,
+    0x69, 0x6d, 0x75, 0x6d, 0x57, 0x69, 0x64, 0x74, 0x68, 0x28,
+    0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x77,
+    0x69, 0x64, 0x74, 0x68, 0x28, 0x29, 0x20, 0x2a, 0x20, 0x30,
+    0x2e, 0x37, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64,
+    0x65, 0x66, 0x20, 0x63, 0x6f, 0x70, 0x79, 0x28, 0x73, 0x65,
+    0x6c, 0x66, 0x29, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65,
+    0x74, 0x73, 0x2e, 0x51, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
+    0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6c, 0x69, 0x70,
+    0x62, 0x6f, 0x61, 0x72, 0x64, 0x28, 0x29, 0x2e, 0x73, 0x65,
+    0x74, 0x54, 0x65, 0x78, 0x74, 0x28, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x6d, 0x65, 0x73,
+    0x73, 0x61, 0x67, 0x65, 0x2e, 0x74, 0x6f, 0x50, 0x6c, 0x61,
+    0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x28, 0x29, 0x20, 0x2b,
+    0x20, 0x27, 0x5c, 0x5c, 0x6e, 0x27, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x0a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x64, 0x65, 0x66, 0x20, 0x73, 0x65, 0x74, 0x5f,
+    0x74, 0x65, 0x78, 0x74, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2c,
+    0x20, 0x74, 0x65, 0x78, 0x74, 0x29, 0x3a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x75, 0x69, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
+    0x65, 0x2e, 0x73, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x69, 0x6e,
+    0x54, 0x65, 0x78, 0x74, 0x28, 0x74, 0x65, 0x78, 0x74, 0x29,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x68, 0x74, 0x6d, 0x6c, 0x20,
+    0x3d, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e,
+    0x74, 0x65, 0x78, 0x74, 0x20, 0x3d, 0x20, 0x74, 0x65, 0x78,
+    0x74, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x6d,
+    0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x74,
+    0x4c, 0x69, 0x6e, 0x65, 0x57, 0x72, 0x61, 0x70, 0x4d, 0x6f,
+    0x64, 0x65, 0x28, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65,
+    0x74, 0x73, 0x2e, 0x51, 0x54, 0x65, 0x78, 0x74, 0x45, 0x64,
+    0x69, 0x74, 0x2e, 0x4e, 0x6f, 0x57, 0x72, 0x61, 0x70, 0x29,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x20,
+    0x73, 0x65, 0x74, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x28, 0x73,
+    0x65, 0x6c, 0x66, 0x2c, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x29,
+    0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x6d, 0x65,
+    0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x74, 0x48,
+    0x74, 0x6d, 0x6c, 0x28, 0x68, 0x74, 0x6d, 0x6c, 0x29, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73,
+    0x65, 0x6c, 0x66, 0x2e, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x3d,
+    0x20, 0x68, 0x74, 0x6d, 0x6c, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x74,
+    0x65, 0x78, 0x74, 0x20, 0x3d, 0x20, 0x4e, 0x6f, 0x6e, 0x65,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x73, 0x65, 0x6c, 0x66, 0x2e, 0x75, 0x69, 0x2e, 0x6d, 0x65,
+    0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x74, 0x4c,
+    0x69, 0x6e, 0x65, 0x57, 0x72, 0x61, 0x70, 0x4d, 0x6f, 0x64,
+    0x65, 0x28, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
+    0x73, 0x2e, 0x51, 0x54, 0x65, 0x78, 0x74, 0x45, 0x64, 0x69,
+    0x74, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x57, 0x69,
+    0x64, 0x74, 0x68, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x64, 0x65, 0x66, 0x20, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65,
+    0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x5f,
+    0x69, 0x63, 0x6f, 0x6e, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x2c,
+    0x20, 0x69, 0x63, 0x6f, 0x6e, 0x29, 0x3a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66,
+    0x2e, 0x75, 0x69, 0x2e, 0x69, 0x63, 0x6f, 0x6e, 0x2e, 0x73,
+    0x65, 0x74, 0x50, 0x69, 0x78, 0x6d, 0x61, 0x70, 0x28, 0x51,
+    0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x51,
+    0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78,
+    0x2e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49,
+    0x63, 0x6f, 0x6e, 0x28, 0x69, 0x63, 0x6f, 0x6e, 0x29, 0x29,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x64, 0x65, 0x66, 0x20,
+    0x65, 0x78, 0x65, 0x63, 0x28, 0x73, 0x65, 0x6c, 0x66, 0x29,
+    0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x51, 0x74, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x54, 0x69,
+    0x6d, 0x65, 0x72, 0x2e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
+    0x53, 0x68, 0x6f, 0x74, 0x28, 0x31, 0x30, 0x2c, 0x20, 0x66,
+    0x75, 0x6e, 0x63, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x70,
+    0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x28, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x73,
+    0x65, 0x74, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x53,
+    0x69, 0x7a, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x73, 0x65, 0x6c, 0x66, 0x2e, 0x63, 0x61, 0x63, 0x68,
+    0x65, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d,
+    0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x0a, 0x0a, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74,
+    0x75, 0x72, 0x6e, 0x20, 0x73, 0x75, 0x70, 0x65, 0x72, 0x28,
+    0x29, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x28, 0x29, 0x0a, 0x0a,
+    0x0a, 0x64, 0x65, 0x66, 0x20, 0x64, 0x69, 0x61, 0x6c, 0x6f,
+    0x67, 0x28, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x2c, 0x20,
+    0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2c, 0x20, 0x74,
+    0x69, 0x74, 0x6c, 0x65, 0x3d, 0x4e, 0x6f, 0x6e, 0x65, 0x2c,
+    0x20, 0x69, 0x63, 0x6f, 0x6e, 0x3d, 0x4e, 0x6f, 0x6e, 0x65,
+    0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x74, 0x65,
+    0x78, 0x74, 0x3d, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x2c, 0x20,
+    0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
+    0x65, 0x3d, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x3a, 0x0a,
+    0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x78, 0x20, 0x3d, 0x20,
+    0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x28, 0x70, 0x61, 0x72,
+    0x65, 0x6e, 0x74, 0x3d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
+    0x2c, 0x20, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
+    0x62, 0x6c, 0x65, 0x3d, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
+    0x6c, 0x61, 0x62, 0x6c, 0x65, 0x29, 0x0a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x69, 0x66, 0x20, 0x72, 0x69, 0x63, 0x68, 0x5f,
+    0x74, 0x65, 0x78, 0x74, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65,
+    0x74, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x28, 0x6d, 0x65, 0x73,
+    0x73, 0x61, 0x67, 0x65, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x65, 0x6c, 0x73, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65,
+    0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x28, 0x6d, 0x65, 0x73,
+    0x73, 0x61, 0x67, 0x65, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20,
+    0x20, 0x69, 0x66, 0x20, 0x69, 0x63, 0x6f, 0x6e, 0x20, 0x69,
+    0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x4e, 0x6f, 0x6e, 0x65,
+    0x3a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x62, 0x6f, 0x78, 0x2e, 0x73, 0x65, 0x74, 0x5f, 0x6d, 0x65,
+    0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x5f,
+    0x69, 0x63, 0x6f, 0x6e, 0x28, 0x69, 0x63, 0x6f, 0x6e, 0x29,
+    0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x74,
+    0x69, 0x74, 0x6c, 0x65, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x6f,
+    0x74, 0x20, 0x4e, 0x6f, 0x6e, 0x65, 0x3a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x61, 0x72, 0x65,
+    0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x20, 0x3d,
+    0x20, 0x51, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73,
+    0x2e, 0x51, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
+    0x69, 0x6f, 0x6e, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
+    0x63, 0x65, 0x28, 0x29, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
+    0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
+    0x28, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x69, 0x66, 0x20, 0x6c, 0x65, 0x6e, 0x28, 0x70,
+    0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c,
+    0x65, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x3a, 0x0a, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x74, 0x69, 0x74, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x27, 0x20,
+    0x2d, 0x20, 0x27, 0x2e, 0x6a, 0x6f, 0x69, 0x6e, 0x28, 0x28,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x70, 0x61, 0x72,
+    0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2c,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x69, 0x74,
+    0x6c, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
+    0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x29, 0x29, 0x0a, 0x0a,
+    0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x62,
+    0x6f, 0x78, 0x2e, 0x73, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64,
+    0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x28, 0x74, 0x69,
+    0x74, 0x6c, 0x65, 0x29, 0x0a, 0x0a, 0x20, 0x20, 0x20, 0x20,
+    0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x62, 0x6f, 0x78,
+    0x2e, 0x65, 0x78, 0x65, 0x63, 0x28, 0x29, 0x0a, 0x0a, 0x51,
+    0x74, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x71, 0x44, 0x65, 0x62,
+    0x75, 0x67, 0x28, 0x27, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
+    0x67, 0x20, 0x73, 0x79, 0x73, 0x2e, 0x65, 0x78, 0x63, 0x65,
+    0x70, 0x74, 0x68, 0x6f, 0x6f, 0x6b, 0x20, 0x74, 0x6f, 0x20,
+    0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x20, 0x64, 0x69,
+    0x61, 0x6c, 0x6f, 0x67, 0x27, 0x29, 0x0a, 0x73, 0x79, 0x73,
+    0x2e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x68, 0x6f, 0x6f,
+    0x6b, 0x20, 0x3d, 0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
+    0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
+    0x65, 0x5f, 0x62, 0x6f, 0x78, 0x0a, 0x00
+};
diff --git a/designer/excepthook.py b/designer/excepthook.py
new file mode 100644
index 0000000..c740760
--- /dev/null
+++ b/designer/excepthook.py
@@ -0,0 +1,170 @@
+import functools
+import sys
+import traceback
+
+from PyQt6 import QtCore, QtWidgets
+
+QtCore.qDebug('Importing module for exception dialogs')
+
+def exception_message_box(excType=None, excValue=None, tracebackobj=None):
+    message = traceback.format_exception(excType, excValue, tracebackobj)
+    message = ''.join(message)
+
+    dialog(
+        parent=None,
+        title='Exception',
+        message=message,
+        icon=QtWidgets.QMessageBox.Critical,
+    )
+
+class FittedTextBrowser(QtWidgets.QTextBrowser):
+    def sizeHint(self):
+        default = super().sizeHint()
+
+        if not default.isValid():
+            return default
+
+        document_size = self.document().size()
+
+        desktops = QtWidgets.QApplication.desktop()
+        screen_number = desktops.screenNumber(self.parent())
+        geometry = desktops.screenGeometry(screen_number)
+
+        if document_size.width() == 0:
+            document_size.setWidth(geometry.width() * 0.25)
+        if document_size.height() == 0:
+            document_size.setHeight(geometry.height() * 0.4)
+
+        scrollbar_width = QtWidgets.QApplication.style().pixelMetric(
+            QtWidgets.QStyle.PM_ScrollBarExtent
+        )
+
+        width = sum((
+            document_size.width(),
+            self.contentsMargins().left(),
+            self.contentsMargins().right(),
+            scrollbar_width,
+        ))
+
+        height = sum((
+            document_size.height(),
+            self.contentsMargins().top(),
+            self.contentsMargins().bottom(),
+            scrollbar_width,
+        ))
+
+        return QtCore.QSize(width, height)
+
+
+class DialogUi:
+    def __init__(self, parent):
+        self.layout = QtWidgets.QGridLayout(parent)
+        self.icon = QtWidgets.QLabel(parent)
+        self.message = FittedTextBrowser(parent)
+        self.copy = QtWidgets.QPushButton(parent)
+        self.buttons = QtWidgets.QDialogButtonBox(parent)
+
+        self.copy.setText('Copy To Clipboard')
+
+        self.layout.addWidget(self.icon, 0, 0)
+        self.layout.addWidget(self.message, 0, 1, 1, 2)
+        self.layout.addWidget(self.copy, 1, 1)
+        self.layout.addWidget(self.buttons, 1, 2)
+
+        self.layout.setAlignment(self.copy, QtCore.Qt.AlignLeft)
+
+        self.layout.setRowStretch(0, 1)
+        self.layout.setColumnStretch(1, 1)
+
+
+class Dialog(QtWidgets.QDialog):
+    def __init__(self, *args, cancellable=False, **kwargs):
+        super().__init__(*args, **kwargs)
+
+        self.ui = DialogUi(parent=self)
+
+        self.ui.buttons.accepted.connect(self.accept)
+        self.ui.buttons.rejected.connect(self.reject)
+
+        self.ui.copy.clicked.connect(self.copy)
+
+        self.setLayout(self.ui.layout)
+        buttons = QtWidgets.QDialogButtonBox.Ok
+        if cancellable:
+            buttons |= QtWidgets.QDialogButtonBox.Cancel
+
+        self.ui.buttons.setStandardButtons(buttons)
+
+        self.text = None
+        self.html = None
+
+        self.cached_maximum_size = self.maximumSize()
+
+        desktops = QtWidgets.QApplication.desktop()
+        screen_number = desktops.screenNumber(self.parent())
+        geometry = desktops.screenGeometry(screen_number)
+
+        self.setMaximumHeight(geometry.height() * 0.7)
+        self.setMaximumWidth(geometry.width() * 0.7)
+
+    def copy(self):
+        QtWidgets.QApplication.clipboard().setText(
+            self.ui.message.toPlainText() + '\\n'
+        )
+
+    def set_text(self, text):
+        self.ui.message.setPlainText(text)
+
+        self.html = None
+        self.text = text
+
+        self.ui.message.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
+
+    def set_html(self, html):
+        self.ui.message.setHtml(html)
+
+        self.html = html
+        self.text = None
+
+        self.ui.message.setLineWrapMode(QtWidgets.QTextEdit.WidgetWidth)
+
+    def set_message_box_icon(self, icon):
+        self.ui.icon.setPixmap(QtWidgets.QMessageBox.standardIcon(icon))
+
+    def exec(self):
+        QtCore.QTimer.singleShot(10, functools.partial(
+                self.setMaximumSize,
+                self.cached_maximum_size,
+        ))
+
+        return super().exec()
+
+
+def dialog(parent, message, title=None, icon=None,
+           rich_text=False, cancellable=False):
+    box = Dialog(parent=parent, cancellable=cancellable)
+
+    if rich_text:
+        box.set_html(message)
+    else:
+        box.set_text(message)
+
+    if icon is not None:
+        box.set_message_box_icon(icon)
+
+    if title is not None:
+        parent_title = QtWidgets.QApplication.instance().applicationName()
+
+        if len(parent_title) > 0:
+            title = ' - '.join((
+                parent_title,
+                title,
+            ))
+
+
+        box.setWindowTitle(title)
+
+    return box.exec()
+
+QtCore.qDebug('Setting sys.excepthook to provide dialog')
+sys.excepthook = exception_message_box
diff --git a/designer/generate_module_literal.py b/designer/generate_module_literal.py
new file mode 100644
index 0000000..cc6b4de
--- /dev/null
+++ b/designer/generate_module_literal.py
@@ -0,0 +1,35 @@
+import os
+import itertools
+
+
+# https://repl.it/IwNE/4
+def chunker(iterable, n):
+    "Collect data into fixed-length chunks or blocks except last due to lack of fill."
+    # chunker('ABCDEFG', 3) --> ABC DEF G"
+
+    i = iter(iterable)
+
+    while True:
+        t = tuple(next(i) for _ in range(n))
+
+        if len(t) > 0:
+            yield t
+        else:
+            break
+
+
+with open('excepthook.py', 'rb') as f:
+    raw = f.read()
+
+with open('excepthook.c', 'w', newline='\n') as f:
+    f.write('const char * moduleName = "exceptiondialog";\n\n')
+    f.write('const char moduleCode[] = {\n')
+
+    indent = ' ' * 4
+
+    chunks = chunker(itertools.chain(raw, b'\0'), 10)
+    lines = (', '.join('0x{:02x}'.format(b) for b in chunk) for chunk in chunks)
+    lines = (',\n'.join(indent + line for line in lines))
+    for line in lines:
+        f.write(line)
+    f.write("\n};\n")
diff --git a/designer/pluginloader.cpp b/designer/pluginloader.cpp
index afa56b5..6f00377 100644
--- a/designer/pluginloader.cpp
+++ b/designer/pluginloader.cpp
@@ -25,6 +25,7 @@
 
 #include <stdlib.h>
 
+#include <QDebug>
 #include <QtGlobal>
 #include <QtPlugin>
 #include <QCoreApplication>
@@ -36,6 +37,114 @@
 
 #include "../qpy/QtDesigner/qpydesignercustomwidgetplugin.h"
 
+#include "excepthook.c"
+
+
+void setupExceptHookDialog(void)
+{
+    qDebug() << "Preparing to import module";
+    qDebug() << PyBytes_AS_STRING(PyUnicode_AsEncodedString(PyObject_Str(PySys_GetObject("path")), "utf-8", "error 1?"));
+    // https://stackoverflow.com/a/42853449/228539
+    PyObject *pyModule = PyModule_New(moduleName);
+    // Set properties on the new module object
+    PyModule_AddStringConstant(pyModule, "__file__", "");
+    PyObject *localDict = PyModule_GetDict(pyModule);   // Returns a borrowed reference: no need to Py_DECREF() it once we are done
+    PyObject *builtins = PyEval_GetBuiltins();  // Returns a borrowed reference: no need to Py_DECREF() it once we are done
+    PyDict_SetItemString(localDict, "__builtins__", builtins);
+
+    qDebug() << "About to import module";
+
+    // Define code in the newly created module
+    PyObject *pyValue = PyRun_String(moduleCode, Py_file_input, localDict, localDict);
+    qDebug() << "Code just run";
+    if (pyValue == NULL)
+    {
+        qDebug() << "An error occurred while importing the module";
+
+        char * full_backtrace = NULL;
+
+        if (PyErr_Occurred() != NULL) {
+            qDebug() << "PyErr_Occurred() != NULL";
+            PyObject *ptype, *pvalue, *ptraceback;
+            PyObject *pystr, *module_name, *pyth_module, *pyth_func;
+            char *str;
+            char *error_description;
+
+            PyErr_Fetch(&ptype, &pvalue, &ptraceback);
+            qDebug() << "ptype == NULL : " << (ptype == NULL);
+            qDebug() << "pvalue == NULL : " << (pvalue == NULL);
+            qDebug() << "ptraceback == NULL : " << (ptraceback == NULL);
+            pystr = PyObject_Str(pvalue);
+            qDebug() << "pystr == NULL : " << (pystr == NULL);
+            pystr = PyUnicode_AsEncodedString(pystr, "utf-8", "error 1?");
+            qDebug() << "pystr == NULL : " << (pystr == NULL);
+            str = PyBytes_AS_STRING(pystr);
+            qDebug() << "str == NULL : " << (str == NULL);
+            if (str != NULL)
+            {
+                qDebug() << "str: " << str;
+            }
+            Py_DECREF(pystr);
+            error_description = strdup(str);
+            qDebug() << "error_description == NULL : " << (error_description == NULL);
+            if (error_description != NULL)
+            {
+                qDebug() << "error_description: " << error_description;
+            }
+
+            /* See if we can get a full traceback */
+            module_name = PyUnicode_Decode("traceback", 9, "utf-8", "error 2?");
+            pyth_module = PyImport_Import(module_name);
+            Py_DECREF(module_name);
+
+            qDebug() << "pyth_module == NULL : " << (pyth_module == NULL);
+            if (pyth_module == NULL) {
+                full_backtrace = NULL;
+                return;
+            }
+
+            pyth_func = PyObject_GetAttrString(pyth_module, "format_exception");
+            if (pyth_func && PyCallable_Check(pyth_func))
+            {
+                qDebug() << "pyth_func && PyCallable_Check(pyth_func)";
+                PyObject *pyth_val;
+
+                pyth_val = PyObject_CallFunctionObjArgs(pyth_func, ptype, pvalue, ptraceback, Py_None, Py_True, NULL);
+                qDebug() << "pyth_val == NULL : " << (pyth_val == NULL);
+
+                pystr = PyObject_Str(pyth_val);
+                qDebug() << "pystr == NULL : " << (pystr == NULL);
+
+                pystr = PyUnicode_AsEncodedString(pystr, "utf-8", "error 3?");
+                qDebug() << "pystr == NULL : " << (pystr == NULL);
+
+                str = PyBytes_AS_STRING(pystr);
+                qDebug() << "str == NULL : " << (str == NULL);
+
+                Py_DECREF(pystr);
+                full_backtrace = strdup(str);
+                Py_DECREF(pyth_val);
+            }
+        }
+
+        if (full_backtrace != NULL)
+        {
+            qDebug() << "About to print backtrace";
+            qDebug() << full_backtrace;
+        }
+        else
+        {
+            qDebug() << "Backtrace was NULL";
+        }
+    }
+    else
+    {
+        qDebug() << "About to decref";
+        Py_DECREF(pyValue);
+    }
+
+    qDebug() << "Done importing module";
+}
 
 // Construct the collection of Python widgets.
 PyCustomWidgets::PyCustomWidgets(QObject *parent) : QObject(parent),
@@ -164,6 +273,7 @@ PyCustomWidgets::PyCustomWidgets(QObject *parent) : QObject(parent),
         PyGILState_STATE gil_state = PyGILState_Ensure();
 #endif
 
+        setupExceptHookDialog();
         bool fatal = importPlugins(dir, plugins);
 
 #if defined(WITH_THREAD)
